# Generated by Django 4.2 on 2025-06-12 11:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0011_remove_childdevice_last_seen_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_pattern', models.TextField(help_text='URL, domain, keyword, or regex pattern to block')),
                ('block_type', models.CharField(choices=[('exact', 'Exact URL'), ('domain', 'Entire Domain'), ('keyword', 'Contains Keyword'), ('regex', 'Regular Expression')], default='exact', max_length=10)),
                ('category', models.CharField(choices=[('adult', 'Adult Content'), ('social', 'Social Media'), ('gaming', 'Gaming'), ('streaming', 'Video Streaming'), ('shopping', 'Shopping'), ('news', 'News'), ('education', 'Educational'), ('custom', 'Custom Category')], default='custom', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Reason for blocking this URL', null=True)),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('blocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_urls', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_urls', to='api.childdevice')),
            ],
            options={
                'verbose_name': 'Blocked URL',
                'verbose_name_plural': 'Blocked URLs',
                'ordering': ['-blocked_at'],
            },
        ),
        migrations.CreateModel(
            name='SafeBrowsingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='fas fa-shield-alt', max_length=50)),
                ('color', models.CharField(default='#dc3545', max_length=20)),
                ('is_enabled_by_default', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Safe Browsing Category',
                'verbose_name_plural': 'Safe Browsing Categories',
            },
        ),
        migrations.CreateModel(
            name='URLAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=2048)),
                ('domain', models.CharField(db_index=True, max_length=255)),
                ('access_time', models.DateTimeField()),
                ('was_blocked', models.BooleanField(default=False)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('blocked_by_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.blockedurl')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_access_logs', to='api.childdevice')),
            ],
            options={
                'ordering': ['-access_time'],
            },
        ),
        migrations.CreateModel(
            name='DeviceOfflineNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_sent_at', models.DateTimeField(auto_now_add=True)),
                ('days_offline', models.PositiveIntegerField()),
                ('email_sent_to', models.EmailField(max_length=254)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offline_notifications', to='api.childdevice')),
            ],
            options={
                'ordering': ['-notification_sent_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceContentFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('strict_mode', models.BooleanField(default=False, help_text='Block unknown/unclassified websites')),
                ('allow_search_engines', models.BooleanField(default=True)),
                ('allow_educational', models.BooleanField(default=True)),
                ('whitelist_enabled', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('blocked_categories', models.ManyToManyField(blank=True, to='api.safebrowsingcategory')),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content_filter', to='api.childdevice')),
            ],
        ),
        migrations.CreateModel(
            name='WhitelistedURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_pattern', models.TextField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whitelisted_urls', to='api.childdevice')),
            ],
            options={
                'unique_together': {('device', 'url_pattern')},
            },
        ),
        migrations.AddIndex(
            model_name='urlaccesslog',
            index=models.Index(fields=['device', 'access_time'], name='api_urlacce_device__72ea2e_idx'),
        ),
        migrations.AddIndex(
            model_name='urlaccesslog',
            index=models.Index(fields=['domain', 'access_time'], name='api_urlacce_domain_501c5c_idx'),
        ),
        migrations.AddIndex(
            model_name='urlaccesslog',
            index=models.Index(fields=['was_blocked', 'access_time'], name='api_urlacce_was_blo_180780_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blockedurl',
            unique_together={('device', 'url_pattern', 'block_type')},
        ),
    ]
